name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Run tests
      run: cargo test --verbose
    - uses: actions/checkout@v3
    - name: Add Webasm target
      run: rustup target add wasm32-unknown-unknown
    - name: Build Webasm
      run: cargo build --target wasm32-unknown-unknown --release --verbose
    - name: Store Webasm artifact
      uses: actions/upload-artifact@v4
      with:
        name: artifact
        path: ./target/wasm32-unknown-unknown/release/snake.wasm
    - name: Checkout
      uses: actions/checkout@v4
    - name: Get Wasm artifact
      uses: actions/download-artifact@v4
      with:
        path: ./wasm         # Destination path. Supports basic tilde expansion.
    - name: Display structure of downloaded files
      run: ls -R
    - name: Setup Pages
      uses: actions/configure-pages@v4
    - name: Build with Jekyll
      uses: actions/jekyll-build-pages@v1
      with:
        source: ./
        destination: ./_site
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4